#! /usr/local/bin/vvp
:ivl_version "13.0 (devel)" "(s20221226-559-gce7b26e3f)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/local/lib/ivl/system.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_sys.vpi";
:vpi_module "/usr/local/lib/ivl/vhdl_textio.vpi";
:vpi_module "/usr/local/lib/ivl/v2005_math.vpi";
:vpi_module "/usr/local/lib/ivl/va_math.vpi";
:vpi_module "/usr/local/lib/ivl/v2009.vpi";
S_0x1a5a8d0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x1a5aa60 .scope module, "instr_memory_tb" "instr_memory_tb" 3 1;
 .timescale 0 0;
P_0x1a6daf0 .param/l "ADDR_WIDTH" 0 3 4, +C4<00000000000000000000000000100000>;
P_0x1a6db30 .param/l "DATA_WIDTH" 0 3 5, +C4<00000000000000000000000000100000>;
v0x1a96340_0 .net "Instruction", 31 0, v0x1a490b0_0;  1 drivers
v0x1a96400_0 .var "Read_address", 31 0;
S_0x1a6fd70 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 38, 3 38 0, S_0x1a5aa60;
 .timescale 0 0;
v0x1a48500_0 .var/2s "i", 31 0;
S_0x1a95830 .scope module, "uut" "instr_memory" 3 15, 4 1 0, S_0x1a5aa60;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "Read_address";
    .port_info 1 /OUTPUT 32 "Instruction";
P_0x1a95a30 .param/l "ADDR_WIDTH" 0 4 2, +C4<00000000000000000000000000100000>;
P_0x1a95a70 .param/l "DATA_WIDTH" 0 4 3, +C4<00000000000000000000000000100000>;
P_0x1a95ab0 .param/l "MEM_SIZE" 1 4 9, +C4<00000000000000000000000000100000>;
v0x1a490b0_0 .var "Instruction", 31 0;
v0x1a48eb0_0 .net "Read_address", 31 0, v0x1a96400_0;  1 drivers
v0x1a95e20 .array "mem", 32 0, 31 0;
v0x1a95e20_0 .array/port v0x1a95e20, 0;
v0x1a95e20_1 .array/port v0x1a95e20, 1;
v0x1a95e20_2 .array/port v0x1a95e20, 2;
E_0x1a820c0/0 .event anyedge, v0x1a48eb0_0, v0x1a95e20_0, v0x1a95e20_1, v0x1a95e20_2;
v0x1a95e20_3 .array/port v0x1a95e20, 3;
v0x1a95e20_4 .array/port v0x1a95e20, 4;
v0x1a95e20_5 .array/port v0x1a95e20, 5;
v0x1a95e20_6 .array/port v0x1a95e20, 6;
E_0x1a820c0/1 .event anyedge, v0x1a95e20_3, v0x1a95e20_4, v0x1a95e20_5, v0x1a95e20_6;
v0x1a95e20_7 .array/port v0x1a95e20, 7;
v0x1a95e20_8 .array/port v0x1a95e20, 8;
v0x1a95e20_9 .array/port v0x1a95e20, 9;
v0x1a95e20_10 .array/port v0x1a95e20, 10;
E_0x1a820c0/2 .event anyedge, v0x1a95e20_7, v0x1a95e20_8, v0x1a95e20_9, v0x1a95e20_10;
v0x1a95e20_11 .array/port v0x1a95e20, 11;
v0x1a95e20_12 .array/port v0x1a95e20, 12;
v0x1a95e20_13 .array/port v0x1a95e20, 13;
v0x1a95e20_14 .array/port v0x1a95e20, 14;
E_0x1a820c0/3 .event anyedge, v0x1a95e20_11, v0x1a95e20_12, v0x1a95e20_13, v0x1a95e20_14;
v0x1a95e20_15 .array/port v0x1a95e20, 15;
v0x1a95e20_16 .array/port v0x1a95e20, 16;
v0x1a95e20_17 .array/port v0x1a95e20, 17;
v0x1a95e20_18 .array/port v0x1a95e20, 18;
E_0x1a820c0/4 .event anyedge, v0x1a95e20_15, v0x1a95e20_16, v0x1a95e20_17, v0x1a95e20_18;
v0x1a95e20_19 .array/port v0x1a95e20, 19;
v0x1a95e20_20 .array/port v0x1a95e20, 20;
v0x1a95e20_21 .array/port v0x1a95e20, 21;
v0x1a95e20_22 .array/port v0x1a95e20, 22;
E_0x1a820c0/5 .event anyedge, v0x1a95e20_19, v0x1a95e20_20, v0x1a95e20_21, v0x1a95e20_22;
v0x1a95e20_23 .array/port v0x1a95e20, 23;
v0x1a95e20_24 .array/port v0x1a95e20, 24;
v0x1a95e20_25 .array/port v0x1a95e20, 25;
v0x1a95e20_26 .array/port v0x1a95e20, 26;
E_0x1a820c0/6 .event anyedge, v0x1a95e20_23, v0x1a95e20_24, v0x1a95e20_25, v0x1a95e20_26;
v0x1a95e20_27 .array/port v0x1a95e20, 27;
v0x1a95e20_28 .array/port v0x1a95e20, 28;
v0x1a95e20_29 .array/port v0x1a95e20, 29;
v0x1a95e20_30 .array/port v0x1a95e20, 30;
E_0x1a820c0/7 .event anyedge, v0x1a95e20_27, v0x1a95e20_28, v0x1a95e20_29, v0x1a95e20_30;
v0x1a95e20_31 .array/port v0x1a95e20, 31;
v0x1a95e20_32 .array/port v0x1a95e20, 32;
E_0x1a820c0/8 .event anyedge, v0x1a95e20_31, v0x1a95e20_32;
E_0x1a820c0 .event/or E_0x1a820c0/0, E_0x1a820c0/1, E_0x1a820c0/2, E_0x1a820c0/3, E_0x1a820c0/4, E_0x1a820c0/5, E_0x1a820c0/6, E_0x1a820c0/7, E_0x1a820c0/8;
    .scope S_0x1a95830;
T_0 ;
    %vpi_call/w 4 15 "$readmemh", "instr_mem.hex", v0x1a95e20, 32'sb00000000000000000000000000000000, 32'sb00000000000000000000000000011111 {0 0 0};
    %end;
    .thread T_0;
    .scope S_0x1a95830;
T_1 ;
    %wait E_0x1a820c0;
    %ix/getv 4, v0x1a48eb0_0;
    %load/vec4a v0x1a95e20, 4;
    %assign/vec4 v0x1a490b0_0, 0;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_0x1a5aa60;
T_2 ;
    %delay 10, 0;
    %fork t_1, S_0x1a6fd70;
    %jmp t_0;
    .scope S_0x1a6fd70;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x1a48500_0, 0, 32;
T_2.0 ; Top of for-loop
    %load/vec4 v0x1a48500_0;
    %cmpi/s 32, 0, 32;
	  %jmp/0xz T_2.1, 5;
    %load/vec4 v0x1a48500_0;
    %store/vec4 v0x1a96400_0, 0, 32;
    %delay 10, 0;
    %vpi_call/w 3 41 "$display", "Addr: %h, Data: %h", v0x1a96400_0, v0x1a96340_0 {0 0 0};
T_2.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x1a48500_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x1a48500_0, 0, 32;
    %jmp T_2.0;
T_2.1 ; for-loop exit label
    %end;
    .scope S_0x1a5aa60;
t_0 %join;
    %vpi_call/w 3 45 "$finish" {0 0 0};
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "testbenches/instr_memory_tb.sv";
    "instr_memory.sv";
